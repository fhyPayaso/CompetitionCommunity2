// Generated by Dagger (https://google.github.io/dagger).
package com.fhypayaso.account.dagger;

import com.fhypayaso.accountapi.AccountService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AccountModule_ProvideAccountServiceFactory implements Factory<AccountService> {
  private final AccountModule module;

  public AccountModule_ProvideAccountServiceFactory(AccountModule module) {
    this.module = module;
  }

  @Override
  public AccountService get() {
    return provideInstance(module);
  }

  public static AccountService provideInstance(AccountModule module) {
    return proxyProvideAccountService(module);
  }

  public static AccountModule_ProvideAccountServiceFactory create(AccountModule module) {
    return new AccountModule_ProvideAccountServiceFactory(module);
  }

  public static AccountService proxyProvideAccountService(AccountModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAccountService(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
